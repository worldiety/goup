#!/bin/bash

# This script bootstraps the GoUp setup and should always be checked into the vcs repository.
# It downloads the required GoUp version and executes it.

# Set the version as required.
VERSION="v0.0.16"

# Set the required targets (e.g. all|gomobile/android|gomobile/ios|gomobile/android:gomobile/ios)
TARGETS="all"

################

LOG_LEVEL=$1

if [ -z "$LOG_LEVEL" ]
then
      LOG_LEVEL=0
fi

if [[ "$OSTYPE" == "darwin"* ]]; then
    osarch="darwin-amd64"
else
    osarch="linux-amd64"
fi

default="\e[39m"
lightRed="\e[91m"
lightGreen="\e[92m"

printf "OS: $lightGreen$osarch$default\n"
printf "Wrapper version: $lightGreen$VERSION$default\n"
printf "Targeting: $lightGreen$TARGETS$default\n"

GOUPDIR=".goup"

execName="$GOUPDIR$VERSION"
exec="$GOUPDIR/$execName"

UPDATE_WRAPPER=true

if [[ -f "$exec" ]]; then
    cd $GOUPDIR
    shasum -c $execName.sha -s
    if [ "$?" = "0" ]; then
        printf "Wrapper status:$lightGreen ok$default\n"
        UPDATE_WRAPPER=false
    else
        printf "Wrapper status:$lightRed Not ok$default\n"
        rm "$execName.sha"
        rm "$execName"
    fi
    cd ..
fi

set -e

if [ "$UPDATE_WRAPPER" = true ]; then
    printf "Creating $lightGreen$(pwd)/$GOUPDIR$default.\n"
    mkdir -p $GOUPDIR
    cd $GOUPDIR
    printf "Fetching wrapper version $lightGreen$VERSION$default.\n"
    curl "https://cdn.worldiety.org/github.com/worldiety/goup/$VERSION/$osarch/goup" --output $execName
    chmod +x $execName
    #curl "https://cdn.worldiety.org/github.com/worldiety/goup/$VERSION/$osarch/goup.sha" --output $execName.sha
    shasum -a 1 $execName > $execName.sha
    cd ..
fi

buildDir=$(pwd)

"$exec" -version

"$exec" -dir "$buildDir" -loglevel "$LOG_LEVEL" -targets "$TARGETS"
